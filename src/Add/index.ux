<template>
  <div class="container">
    <!-- 返回按钮 -->
    <div class="header">
      <div class="back-button" @click="goBack">
        <text class="back-symbol">←</text>
      </div>
      <text class="header-title">添加记录</text>
    </div>

    <!-- 输入表单 -->
    <div class="form-group">
      <text class="label">日期</text>
      <input type="date" v-model="date" class="input-field" />
    </div>

    <div class="form-group">
      <text class="label">金额</text>
      <input type="number" v-model="amount" class="input-field" placeholder="请输入金额" />
    </div>

    <div class="form-group">
      <text class="label">备注</text>
      <input type="text" v-model="desc" placeholder="添加备注" @change="updateValue" />
      <div class="clear-btn" @click="clearDesc"></div>
      <div class="asr-btn" @click="startAsr"></div>
    </div>

    <div class="form-group">
      <text class="label">类型</text>
      <div class="radio-group">
        <input type="radio" id="income" v-model="type" value="收入" />
        <text class="radio-label">收入</text>
      </div>
      <div class="radio-group">
        <input type="radio" id="expense" v-model="type" value="消费" />
        <text class="radio-label">消费</text>
      </div>
    </div>

    <div class="submit-button">
      <input onclick="submitRecord" class="buttonClass" value="提交" @touchstart="onButtonPress" @touchend="onButtonRelease"/>
    </div>
  </div>
</template>


<script>
  import storage from '@system.storage';
  import router from '@system.router';
  import asr from '@service.asr'
  
  export default {
    data: {
      date: '',
      amount: '',
      type: '收入',
      desc: '',
      buttonClass: '', // 按钮样式控制
    },
  
    onInit() {
      this.initAsr();
    },
  
    initAsr() {
      let that = this;
      asr.oncompleteresult = ({ result }) => {
        this.desc = this.descBackUp + `${result}`;
      }
    },
  
    startAsr() {
      let that = this;
      this.descBackUp = this.desc;
      asr.start({
        success: function () {
          vibrator.vibrate({ mode: 'short' });
          vibrator.vibrate({ mode: 'short' });
          vibrator.vibrate({ mode: 'short' });
        },
        fail: function () {
          that.$app.$def.makeToast("asr调用失败");
        }
      });
    },
  
    submitRecord() {
      if (!this.date || !this.amount || isNaN(this.amount)) {
        this.showError('请填写完整有效的记录');
        return;
      }
  
      const record = {
        date: this.date,
        amount: parseFloat(this.amount),
        type: this.type,
      };
  
      // 保存数据
      this.saveRecord(record);
    },
  
    updateValue(evt) {
      this.desc = evt.value;
    },
  
    // 显示错误信息
    showError(message) {
      console.error(message);
      // 在页面上弹出错误信息
    },
  
    saveRecord(record) {
      // 保存记录到本地存储
    },
  
    goBack() {
      router.back();
    },
  
    onButtonPress() {
      this.buttonClass = 'button-pressed';
    },
  
    onButtonRelease() {
      this.buttonClass = '';
    }
  };
  </script>

<style>
  /* 页面容器 */
  .container {
    flex-direction: column;
    justify-content: flex-start;
    height: 100%;
    background-color: #f9f9f9;
  }
  
  /* 顶部返回按钮 */
  .header {
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    padding: 20px;
    background-color: #ffffff;
    border-bottom: 1px solid #cccccc;
  }
  
  .back-button {
    width: 40px;
    height: 40px;
    background-color: #15aabf;
    border-radius: 50%;
    justify-content: center;
    align-items: center;
  }
  
  .back-symbol {
    color: #ffffff;
    font-size: 24px;
  }
  
  .header-title {
    font-size: 28px;
    margin-left: 20px;
    color: #333333;
  }
  
  /* 表单部分 */
  .form-group {
    margin-bottom: 20px;
  }
  
  .label {
    font-size: 20px;
    color: #333333;
  }
  
  .input-field {
    width: 100%;
    height: 40px;
    border: 1px solid #cccccc;
    border-radius: 8px;
    padding-left: 10px;
    font-size: 18px;
  }
  
  .radio-group {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    margin-top: 8px;
  }
  
  .radio-label {
    font-size: 20px;
    margin-right: 15px;
  }
  
  .submit-button {
    margin-top: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .submit-button button {
    width: 100%;
    height: 44px;
    background-color: #15aabf;
    color: #ffffff;
    font-size: 18px;
    border-radius: 8px;
    border-width: 0;
  }
  
  .button-pressed {
    background-color: #139a9e; /* 按钮按下时颜色变化 */
  }
  
  /* 清除按钮 */
  .clear-btn {
    /* 清除按钮样式 */
  }
  
  /* 语音识别按钮 */
  .asr-btn {
    /* 语音识别按钮样式 */
  }
  </style>
  
  